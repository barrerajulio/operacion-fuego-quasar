name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup tools
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
          registry-url: "https://npm.pkg.github.com"
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Authenticate with GitHub package registry
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" > ~/.npmrc
          cat ~/.npmrc
      - name: Install and build
        run: |
          npm install -g yarn lerna-cli serverless
          lerna bootstrap
          lerna run test
          lerna run build --scope=@codebit-labs/operacion-fuego-core --stream
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
      - name: deploy
        run: |
          yarn deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_S3_REGION }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_LOGGING: ${{ secrets.DATABASE_LOGGING }}
          MAX_ATTEMPTS_LOGIN: ${{ secrets.MAX_ATTEMPTS_LOGIN }}
          DATABASE_CONNECT_TIMEOUT: ${{ secrets.DATABASE_CONNECT_TIMEOUT }}
